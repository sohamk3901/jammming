{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\l\\\\OneDrive\\\\Desktop\\\\Project\\\\Jammming\\\\front-end\\\\src\\\\Components\\\\App\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport { Spotify } from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistName, setPlaylistName] = useState('New Playlist');\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const search = term => {\n    Spotify.search(term).then(searchResult => {\n      setSearchResults(searchResult);\n    });\n  };\n  const addTrack = track => {\n    let tracks = playlistTracks;\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n    console.log();\n    tracks.push(track);\n    setPlaylistTracks(tracks);\n  };\n  const removeTrack = track => {\n    let tracks = playlistTracks;\n    tracks.filter(currentTrack => currentTrack.id !== track.id);\n    setPlaylistTracks(tracks);\n  };\n  const updatePlaylistName = name => {\n    setPlaylistName(name);\n  };\n  const savePlaylist = () => {\n    const trackUris = playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\n      setPlaylistName('New Playlist');\n      setPlaylistTracks([]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \"mmm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), \"ing\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          searchResults: searchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onNameChange: updatePlaylistName,\n          onRemove: removeTrack,\n          onSave: savePlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kH8hnSpNZhddCSuXeQZUH2NYjZ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBar","SearchResults","Playlist","Spotify","App","searchResults","setSearchResults","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","search","term","then","searchResult","addTrack","track","tracks","find","savedTrack","id","console","log","push","removeTrack","filter","currentTrack","updatePlaylistName","name","savePlaylist","trackUris","map","uri"],"sources":["C:/Users/l/OneDrive/Desktop/Project/Jammming/front-end/src/Components/App/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport { Spotify } from '../../util/Spotify';\n\nconst App = () => {\n\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistName, setPlaylistName] = useState('New Playlist');\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n\n  const search = (term) => {\n    Spotify.search(term).then(searchResult => {\n      setSearchResults(searchResult);\n    });\n  }\n\n  const addTrack = (track) => {\n    let tracks = playlistTracks;\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n    console.log()\n    tracks.push(track);\n    setPlaylistTracks(tracks);\n  }\n\n  const removeTrack = (track) => {\n    let tracks = playlistTracks;\n    tracks.filter(currentTrack => currentTrack.id !== track.id);\n    setPlaylistTracks(tracks);\n  }\n\n  const updatePlaylistName = (name) => {\n    setPlaylistName(name);\n  }\n\n  const savePlaylist = () => {\n    const trackUris = playlistTracks.map(track=>track.uri);\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\n      setPlaylistName('New Playlist');\n      setPlaylistTracks([]);\n    });\n  }\n\n  return (\n    <div>\n      <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n      <div className=\"App\">\n        <SearchBar onSearch={search}/>\n        <div className=\"App-playlist\">\n          <SearchResults searchResults={searchResults}\n                          onAdd={addTrack}/>\n          <Playlist playlistName={playlistName}\n                    playlistTracks={playlistTracks}\n                    onNameChange={updatePlaylistName}\n                    onRemove={removeTrack}\n                    onSave={savePlaylist}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}